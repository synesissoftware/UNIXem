UNIXem - Changes
================

Updated:    20th May 2025


    ************************************
    * Change key:                      *
    *                                  *
    *  ~  means something has changed  *
    *  +  means a new addition         *
    *  -  means removal of something   *
    *  *  means a general bullet-point *
    *                                  *
    ************************************


20th May 2025 - 1.13.0-alpha1
=============================

Summary:
--------

 * Added `unixem_util_str_stpcpy()` / `unixem_util_str_wcpcpy()`;
 * Added `unixem_util_str_stpncpy()` / `unixem_util_str_wcpncpy()`;

Details:
--------

Depends on:
 * STLSoft v1.11.1-rc1 or later (testing only);
 * shwild v0.12.6 or later (optional, testing only);
 * xTests v0.26.4 or later (testing only);


19th May 2025 - 1.12.8
======================

Summary:
--------

 * `glob()` now provides a pseudo-random order when `GLOB_NOSORT` flag is specified;
 * Added **UNIXem.Util.FS** API, and applied in refactoring some API functions;
 * Added **UNIXem.Util.Str** API, and applied in refactoring some API functions;
 * Expanded **test.component.dirent**;
 * Expanded **test.component.glob**;
 * Miscellaneous consistency improvements;
 * CMake optional dependency on **shwild**;
 * Standard names of implementation files of unit/component tests;

Details:
--------

Depends on:
 * STLSoft v1.11.1-rc1 or later (testing only);
 * shwild v0.12.6 or later (optional, testing only);
 * xTests v0.26.4 or later (testing only);


1st May 2025 - 1.12.7
=====================

Summary:
--------

 * CMake support;
 * MinGW support;
 * `usleep()` now sleeps for (at least) 1ms when given sleep time in range 1-999 nanoseconds;
 * Simplying `glob()` API;
 * Simplified implementation of `unixem__setenv__putenv_()` (and avoided warnings w MinGW);
 * Refactored discrimination of integer types;
 * Refactored in terms of `unixem_internal_Windows_HANDLE_from_file_handle()`
 * Added **test.component.unistd.usleep**;
 * **test.component.unistd.mkdtemp** ensures created temporary directories and temporary files are removed;
 * **test.scratch.getrusage** ensures created temporary files are removed;
 * Visual C++ warnings;
 * VS Code settings;
 * Removed support for Comeau compiler;
 * Miscellaneous tidying and consistency fixes;
 * Added .gitattributes;

Details:
--------

Depends on:
 * STLSoft v1.11.1-beta7 or later (testing only);
 * xTests v0.26.2 or later (testing only);


17th December 2020 - 1.12.6
===========================

Summary:
--------

 * compatibility with Visual Studio 2019 (16.8.2)

Details:
--------

General:

 ~ include/unixem/implicit_link.h:
 ~ include/unixem/unixem.h:
    ~ compatibility with Visual Studio 2019 (16.8.2)

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:


19th July 2020 - 1.12.5
=======================

Summary:
--------

 * added support for Visual C++ 15 and 16

Details:
--------

General:

 ~ include/unixem/implicit_link.h:
 ~ include/unixem/unixem.h:
    + added support for Visual C++ 15 and 16

Distribution:

Makefiles / Project-files:

 + build/vc15.x64/makefile:
 + build/vc15/makefile:
 + build/vc16.x64/makefile:
 + build/vc16/makefile:
    + added support for Visual C++ 15 and 16

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:


19th July 2020 - 1.12.4
=======================

Summary:
--------

 * refactored makefiles (in auto-generation)

Details:
--------

General:

 ~ include/unixem/unixem.h:
    ~ updated makefiles

Distribution:

Makefiles / Project-files:

 ~ build/ar/makefile:
 ~ build/bc55/makefile:
 ~ build/bc551/makefile:
 ~ build/bc56/makefile:
 ~ build/bc564/makefile:
 ~ build/bc582/makefile:
 ~ build/bc59x/makefile:
 ~ build/bc61x/makefile:
 ~ build/como433/makefile:
 ~ build/cw7/makefile:
 ~ build/cw8/makefile:
 ~ build/dm/makefile:
 ~ build/gcc295/makefile:
 ~ build/gcc32/makefile:
 ~ build/gcc33/makefile:
 ~ build/gcc34/makefile:
 ~ build/gcc49/makefile:
 ~ build/gcc81/makefile:
 ~ build/icl10/makefile:
 ~ build/icl11/makefile:
 ~ build/icl6/makefile:
 ~ build/icl7/makefile:
 ~ build/icl8/makefile:
 ~ build/icl9/makefile:
 ~ build/makefile.tmpl:
 ~ build/makefile.tools.xml:
 ~ build/ow12/makefile:
 ~ build/ow13/makefile:
 ~ build/ow14/makefile:
 ~ build/ow15/makefile:
 ~ build/ow16/makefile:
 ~ build/ow17/makefile:
 ~ build/vc10.x64/makefile:
 ~ build/vc10/makefile:
 ~ build/vc11.x64/makefile:
 ~ build/vc11/makefile:
 ~ build/vc12.x64/makefile:
 ~ build/vc12/makefile:
 ~ build/vc14.x64/makefile:
 ~ build/vc14/makefile:
 ~ build/vc42/makefile:
 ~ build/vc5/makefile:
 ~ build/vc6/makefile:
 ~ build/vc7/makefile:
 ~ build/vc71/makefile:
 ~ build/vc8.x64/makefile:
 ~ build/vc8/makefile:
 ~ build/vc9.x64/makefile:
 ~ build/vc9/makefile:
    ~ updated variant libs
    ~ tools file refactoring
    ~ makefile refactoring

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:


14th October 2019 - 1.12.3
==========================

Summary:
--------

 * added GCC 4.9 (MinGW) compatibility

Details:
--------

General:

 ~ src/mmap.c:
    + added GCC 4.9 (MinGW) compatibility

Distribution:

Makefiles / Project-files:

 ~ build/gcc49/makefile:
    + added GCC 4.9 (MinGW) compatibility

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:


14th October 2019 - 1.12.2
==========================

Summary:
--------

 * fixing generated library names to match implicit-link
 * fixed invalid value of 1.11.4's UNIXEM_VER by bumping minor version
 * added GCC 8.1 (MinGW) compatibility

Details:
--------

General:

 ~ include/unixem/unixem.h:
    ~ fixed invalid value of 1.11.4's UNIXEM_VER by bumping minor version

Distribution:

Makefiles / Project-files:

 ~ build/ar/makefile:
 ~ build/bc55/makefile:
 ~ build/bc551/makefile:
 ~ build/bc56/makefile:
 ~ build/bc564/makefile:
 ~ build/bc582/makefile:
 ~ build/bc59x/makefile:
 ~ build/bc61x/makefile:
 ~ build/como433/makefile:
 ~ build/cw7/makefile:
 ~ build/cw8/makefile:
 ~ build/dm/makefile:
 ~ build/gcc295/makefile:
 ~ build/gcc32/makefile:
 ~ build/gcc33/makefile:
 ~ build/gcc34/makefile:
 ~ build/icl10/makefile:
 ~ build/icl11/makefile:
 ~ build/icl6/makefile:
 ~ build/icl7/makefile:
 ~ build/icl8/makefile:
 ~ build/icl9/makefile:
 ~ build/makefile.tmpl:
 ~ build/ow12/makefile:
 ~ build/ow13/makefile:
 ~ build/ow14/makefile:
 ~ build/ow15/makefile:
 ~ build/ow16/makefile:
 ~ build/ow17/makefile:
 ~ build/vc10.x64/makefile:
 ~ build/vc10/makefile:
 ~ build/vc11.x64/makefile:
 ~ build/vc11/makefile:
 ~ build/vc12.x64/makefile:
 ~ build/vc12/makefile:
 ~ build/vc14.x64/makefile:
 ~ build/vc14/makefile:
 ~ build/vc42/makefile:
 ~ build/vc5/makefile:
 ~ build/vc6/makefile:
 ~ build/vc7/makefile:
 ~ build/vc71/makefile:
 ~ build/vc8.x64/makefile:
 ~ build/vc8/makefile:
 ~ build/vc9.x64/makefile:
 ~ build/vc9/makefile:
    ~ fixing generated library names to match implicit-link

 ~ build/gcc81/makefile:
    + added GCC 8.1 (MinGW) compatibility

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:


9th October 2019 - 1.11.4
=========================

Summary:
--------

 * fixing up setenv() / unsetenv()
 * incorporating latest changes from GitHub repo
 * fleshing out README.md for the GitHub site

Details:
--------

General:

 ~ include/unixem/setenv.h:
   ~ setenv() => unixem_setenv()
   ~ unsetenv() => unixem_unsetenv()
   ~ tidying documentation

 ~ src/setenv.c:
   ~ setenv() => unixem_setenv()
   ~ unsetenv() => unixem_unsetenv()
   ~ fixing defect when compiled in light of VC++ 10+'s so-called "safe string" library

Distribution:

Makefiles / Project-files:

 + test/scratch/test.scratch.setenv/vc10/test.scratch.setenv.vcxproj
 + test/scratch/test.scratch.setenv/vc10/test.scratch.setenv.vcxproj.filters

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



2nd January 2017 - 1.11.2
=========================

Summary:
--------

 * fixed name of built library prefix from "unixem.core.1.*" to "unixem.1.core.*"
 * moved build/vc6/unixem.dsp => projects/core/vc6/unixem.core.dsp
 * added VC++10 project and props files

Details:
--------

General:

 ~ include/asm/atomic.h
 ~ include/dirent.h
 ~ include/dlfcn.h
 ~ include/glob.h
 ~ include/sys/mman.h
 ~ include/sys/resource.h
 ~ include/sys/time.h
 ~ include/sys/uio.h
 ~ include/unistd.h
 ~ include/unixem/asm/atomic.h
 ~ include/unixem/dirent.h
 ~ include/unixem/dlfcn.h
 ~ include/unixem/glob.h
 ~ include/unixem/internal/safestr.h
 ~ include/unixem/internal/util.h
 ~ include/unixem/internal/winsock.h
 ~ include/unixem/setenv.h
 ~ include/unixem/sys/mman.h
 ~ include/unixem/sys/resource.h
 ~ include/unixem/sys/time.h
 ~ include/unixem/sys/uio.h
 ~ include/unixem/time.h
 ~ include/unixem/unistd.h
 ~ include/unixem/unixem.h
   ~ documentation improvements

 ~ include/unixem/implicit_link.h
   ~ fixed name of built library prefix from "unixem.core.1.*" to "unixem.1.core.*"

 ~ src/mktemp.c:
   ~ limiting the number of access failures (to 100)

Distribution:

Makefiles / Project-files:

 ~ unixem.vc6.dsw:
 - build/vc6/unixem.dsp:
 + projects/core/vc6/unixem.core.dsp:
   ~ build/vc6/unixem.dsp => projects/core/vc6/unixem.core.dsp

 + unixem.vc10.sln
 + projects/core/vc10/unixem.core.vcxproj
 + projects/core/vc10/unixem.core.vcxproj.filters
 + projects/vcprops/unixem.common.props

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



7th October 2015 - 1.11.1
=========================

Summary:
--------

 * built library name prefix changes from "unixem" to "unixem.core"
 * added mkdtemp()
 * added mkstemp()
 * added VC++14 support

Details:
--------

General:

 ~ include/unistd.h:
   + added mkdtemp() (which is a function-like macro that calls unixem_mkdtemp())
   + added mkstemp() (which is a function-like macro that calls unixem_mkstemp())

 ~ include/unixem/unistd.h:
 ~ src/mktemp.c:
   + added unixem_mkdtemp()
   + added unixem_mkstemp()

 ~ include/unixem/implicit_link.h:
   ~ built library name prefix changes from "unixem" to "unixem.core"
   + support for VC++14

Distribution:

Makefiles / Project-files:

 ~ build/gcc295/makefile:
 ~ build/gcc32/makefile:
 ~ build/gcc33/makefile:
 ~ build/gcc34/makefile:
 ~ build/ow15/makefile:
 ~ build/ow16/makefile:
 ~ build/ow17/makefile:
 ~ build/vc10.x64/makefile:
 ~ build/vc10/makefile:
 ~ build/vc11.x64/makefile:
 ~ build/vc11/makefile:
 ~ build/vc12.x64/makefile:
 ~ build/vc12/makefile:
 ~ build/vc6/makefile:
 ~ build/vc7/makefile:
 ~ build/vc8.x64/makefile:
 ~ build/vc9.x64/makefile:
   ~ built library name prefix changes from "unixem" to "unixem.core"
   + added mkdtemp()
   + added mkstemp()
   ~ canonicalising structure

 + build/vc14.x64/makefile:
 + build/vc14/makefile:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



25th September 2015 - 1.10.2
============================

Summary:
--------

 * minor fix to unixem_gettimeofday()

Details:
--------

General:

 ~ src/time.c:
   ~ handling possible failure of SystemTimeToFileTime() within unixem_gettimeofday()

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



30th July 2015 - 1.10.1
=======================

Summary:
--------

 * added unixem_timegm() / timegm()
 * added VC++11 and VC++12 support

Details:
--------

General:

 + include/unixem/time.h:
 ~ src/time.c:
   + added unixem_timegm()
   + added timegm()

 ~ include/unixem/internal/time.h:
   + added utility function unixem_internal_yearIsLeap()

Distribution:

Makefiles / Project-files:

 + build/vc11.x64/makefile:
 + build/vc11/makefile:
 + build/vc12.x64/makefile:
 + build/vc12/makefile:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



16th June 2012 - 1.9.3
======================

Summary:
--------

 * GLOB_ONLYFILE => GLOB_ONLYREG
 * glob() now preserves dots directories when included in leaf-most pattern part
 * fix to definition of WIN32 when using WinSock

Details:
--------

General:

 ~ include/glob.h:
 ~ include/unixem/unixem.h:
    ~ GLOB_ONLYFILE => GLOB_ONLYREG

 ~ include/unixem/internal/winsock.h:
   ~ now undefines WIN32 if it was not previously defined and was defined by the inclusion of winsock.h

 - include/sys/mman.h:
   - removed vestigial file

 ~ src/glob.c:
    ~ now preserves dots directories, if either is the leaf-most pattern part
    ~ UNIXEM_GLOB_ONLYFILE => UNIXEM_GLOB_ONLYREG

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



4th February 2011 - 1.9.2
=========================

Summary:
--------

 * removed include/sys/select.h (which was vestigial)
 * various tidyings
 * handling EZERO, ERROR_FILE_TOO_LARGE, ERROR_DISK_TOO_FRAGMENTED (in unixem_internal_errno_from_Win32())

Details:
--------

General:

 ~ include/glob.h:
 ~ include/sys/mman.h:
 + include/unixem/unixem.h:
   ~ various tidyings

 - include/sys/mman.h:
   - removed vestigial file

 ~ src/internal/util.c:
    ~ unixem_internal_errno_from_Win32() default (unmatched) return now -1, and handles EZERO, ERROR_FILE_TOO_LARGE, ERROR_DISK_TOO_FRAGMENTED

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



12th August 2010 - 1.9.1
========================

Summary:
--------

 * reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros
 * 64-bit compatibility fixes

Details:
--------

General:

 ~ include/asm/atomic.h:
 ~ include/dirent.h:
 ~ include/dlfcn.h:
 ~ include/glob.h:
 ~ include/sys/mman.h:
 ~ include/sys/resource.h:
 ~ include/sys/uio.h:
 ~ include/unistd.h:
 ~ include/unixem/internal/util.h:
 ~ include/sys/time.h:
    ~ reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros

 + include/unixem/asm/atomic.h:
 + include/unixem/dirent.h:
 + include/unixem/dlfcn.h:
 + include/unixem/glob.h:
 + include/unixem/setenv.h:
 + include/unixem/sys/mman.h:
 + include/unixem/sys/resource.h:
 + include/unixem/sys/uio.h:
 + include/unixem/unistd.h:
 + include/unixem/sys/time.h:
    ~ reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros

 ~ src/atomic.c:
 ~ src/dirent.c:
 ~ src/dlfcn.c:
 ~ src/glob.c:
 ~ src/hostname.c:
 ~ src/internal/util.c:
 ~ src/mmap.c:
 ~ src/resource.c:
 ~ src/setenv.c:
 ~ src/time.c:
 ~ src/uio.c:
    ~ reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros

 ~ src/unistd.c:
    ~ Win64-compatibility
    ~ GCC compatibility
    ~ reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros

Distribution:

Makefiles / Project-files:

 ~ build/ar/makefile:
 ~ build/bc55/makefile:
 ~ build/bc551/makefile:
 ~ build/bc56/makefile:
 ~ build/bc564/makefile:
 ~ build/bc582/makefile:
 ~ build/bc59x/makefile:
 ~ build/bc61x/makefile:
 ~ build/como433/makefile:
 ~ build/cw7/makefile:
 ~ build/cw8/makefile:
 ~ build/dm/makefile:
 ~ build/gcc295/makefile:
 ~ build/gcc32/makefile:
 ~ build/gcc33/makefile:
 ~ build/icl10/makefile:
 ~ build/icl11/makefile:
 ~ build/icl6/makefile:
 ~ build/icl7/makefile:
 ~ build/icl8/makefile:
 ~ build/icl9/makefile:
 ~ build/makefile.tools.xml:
 ~ build/ow12/makefile:
 ~ build/ow13/makefile:
 ~ build/ow14/makefile:
 ~ build/ow15/makefile:
 ~ build/ow16/makefile:
 ~ build/ow17/makefile:
 ~ build/vc10.x64/makefile:
 ~ build/vc10/makefile:
 ~ build/vc42/makefile:
 ~ build/vc5/makefile:
 ~ build/vc6/makefile:
 ~ build/vc7/makefile:
 ~ build/vc71/makefile:
 ~ build/vc8.x64/makefile:
 ~ build/vc8/makefile:
 ~ build/vc9.x64/makefile:
 ~ build/vc9/makefile:
    ~ reworked the API such that all functions are prefixed with unixem_(), and defined to the UNIX functions via macros

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



13th August 2010 - 1.8.5
========================

Summary:
--------

 * gettimeofday() now returns int (instead of void)
 * added VC++ 10 implicit-link support

Details:
--------

General:

 ~ include/sys/time.h:
 ~ src/time.c:
    ~ gettimeofday() now returns int (instead of void)

 ~ include/unixem/implicit_link.h:
    + now supports VC++ 10

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



4th April 2010 - 1.8.4
======================

Summary:
--------

 * fixed erroneous library name in implicit link file
 * added VC++ 10 support

Details:
--------

General:

 ~ include/unixem/implicit_link.h:
    ~ fixed erroneous library name in implicit link file

Distribution:

Makefiles / Project-files:

 + build/vc10.x64/makefile:
 + build/vc10/makefile:
    + added VC++ 10 support

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



6th February 2010 - 1.8.3
=========================

Summary:
--------

 * refactored headers to resolve conflict(s) between unistd.h and winsock(2).h withouth using #define to prevent subsequent inclusion of winsock(2).h
 * added empty (placeholder) files: arpa/inet.h, netinet/in.h, sys/socket.h
 * fixed _M_X86 implicit link defect
 * added implicit link support for Borland 5.9+, 6.1+ and Intel C/C++ 9, 10, 11
 * changed library name/implicit link directives for VC++ x64/IA64 targets
 * added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build
 * various other minor changes

Details:
--------

General:

 ~ include/arpa/inet.h:
 ~ include/netinet/in.h:
 ~ include/sys/socket.h:
    + added empty (placeholder) files

 ~ include/sys/time.h:
    ~ now implemented in terms of unixem/internal/winsock.h

 ~ include/unistd.h:
    ~ updated version
    ~ now controls conflict between unistd.h and winsock(2).h without using #define to prevent subsequent inclusion of winsock(2).h

 ~ include/unixem/implicit_link.h:
    + implicit link support for Borland 5.9+ and 6.1+
    + implicit link support for Intel C/C++ 9, 10, 11
    ~ implicit link to new name for VC++ x64/IA64 targets
    ~ fixed _M_X86 blooper

 ~ include/unixem/internal/winsock.h:
    + unixem/internal/winsock.h

 ~ src/hostname.c:
    ~ changed calling convention of unixem_gethostname()

Distribution:

Makefiles / Project-files:

 ~ build/bc55/makefile:
 ~ build/bc551/makefile:
 ~ build/bc56/makefile:
 ~ build/bc564/makefile:
 ~ build/bc582/makefile:
 ~ build/ow12/makefile:
 ~ build/ow13/makefile:
 ~ build/ow14/makefile:
 ~ build/ow15/makefile:
 ~ build/ow16/makefile:
 ~ build/ow17/makefile:
    + added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build
    ~ -+ librarian to +

 ~ build/bc59x/makefile:
 ~ build/bc61x/makefile:
    + added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build
    + added support for Borland 5.9 and 6.1

 ~ build/icl10/makefile:
 ~ build/icl11/makefile:
 ~ build/icl9/makefile:
    + added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build
    + added support for Intel 9, 10, 11

 ~ build/ar/makefile:
 ~ build/como433/makefile:
 ~ build/cw7/makefile:
 ~ build/cw8/makefile:
 ~ build/dm/makefile:
 ~ build/gcc295/makefile:
 ~ build/gcc32/makefile:
 ~ build/gcc33/makefile:
 ~ build/gcc34/makefile:
 ~ build/icl10/makefile:
 ~ build/icl11/makefile:
 ~ build/icl6/makefile:
 ~ build/icl7/makefile:
 ~ build/icl8/makefile:
 ~ build/icl9/makefile:
 ~ build/vc42/makefile:
 ~ build/vc5/makefile:
 ~ build/vc6/makefile:
 ~ build/vc7/makefile:
 ~ build/vc71/makefile:
 ~ build/vc8/makefile:
 ~ build/vc9/makefile:
    + added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build

 ~ build/vc8.x64/makefile:
 ~ build/vc9.x64/makefile:
    + added Synesis-standard make targets: compile.libs.core, compile.libs, compile, build.libs.core, build.libs, build
    ~ new names for VC++ x64/IA64 targets

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



13th May 2008 - 1.8.2
=====================

Summary:
--------

 * Win64 compatibility

Details:
--------

General:

 - unlink is now left to the version provided with the VC++ RTL
 ~ mman.h now 64-bit compatible

 + implicit link compatibility with vc8 and vc9

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



22nd April 2008 - 1.8.1
=======================

Summary:
--------

 * added gethostname()
 * added getpid()
 * changed 2nd param of gettimeofday() to void*
 * improved semantics for glob() when a pattern search in an
   existing directory matches no entries

Details:
--------

General:

 + gethostname() (in unistd.h and src/hostname.c)
 + added getpid() (in unistd.h and src/unistd.c)
 ~ changed 2nd param of gettimeofday() to void*
 ~ improved semantics for glob() when a pattern search in an
   existing directory matches no entries

Distribution:

Makefiles / Project-files:

 + hostname.c

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



20th April 2008 - 1.7.5
=======================

Summary:
--------

 * the distribution is now rooted at unixem-1.7.5/
 * makefiles for VC++ 8 & 9
 * implicit linking for Borland C/C++ 5.82
 * implicit linking for VC++ 9
 * bundles shwild 0.9.13
 * bundles xTests 0.6.1

Details:
--------

General:

 + implicit linking for Borland C/C++ 5.82
 + implicit linking for VC++ 9

Distribution:

 ~ the distribution is now rooted at unixem-1.7.5/

Makefiles / Project-files:

 + makefiles for VC++ 8 & 9

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



24th February 2008 - 1.7.4
==========================

Summary:
--------

 * include/unixem/internal/safestr.h
 * safe string library for src/glob.c
 * improved handling of offsets and errors in src/mmap.c
 * safe string library for src/setenv.c
 * fixed bug in gettimeofday(), which was showing local time, rather
   than the required system time

Details:
--------

General:

 + include/unixem/internal/safestr.h

 ~ safe string library for src/glob.c
 ~ improved handling of offsets and errors in src/mmap.c
 ~ safe string library for src/setenv.c
 ~ fixed bug in gettimeofday(), which was showing local time, rather
   than the required system time

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:



12th March 2007 - 1.7.3
=======================

Summary:
--------

 * fixed gettimeofday() - was returning local and not system time
 * library now compatible with Secure Library string functions

Details:
--------

General:

 ~ fixed gettimeofday() - was returning local and not system time
 ~ library now compatible with Secure Library string functions

Distribution:

Makefiles / Project-files:

Examples:

Test:

Test.Unit:

Test.Component:

Test.Scratch:

Depends on:

=============================== end of file ================================

